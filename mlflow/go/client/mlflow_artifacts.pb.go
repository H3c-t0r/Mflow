// This proto file defines the MLflow Artifacts Service that provides the following REST APIs
// for proxied artifact operations:
// - /mlflow-artifacts/artifacts/<artifact_path> GET: Download an artifact
// - /mlflow-artifacts/artifacts/<artifact_path> PUT: Upload an artifact
// - /mlflow-artifacts/artifact?path=<value> GET: List artifacts

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.0
// source: mlflow_artifacts.proto

package client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DownloadArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownloadArtifact) Reset() {
	*x = DownloadArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mlflow_artifacts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadArtifact) ProtoMessage() {}

func (x *DownloadArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_mlflow_artifacts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadArtifact.ProtoReflect.Descriptor instead.
func (*DownloadArtifact) Descriptor() ([]byte, []int) {
	return file_mlflow_artifacts_proto_rawDescGZIP(), []int{0}
}

type UploadArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadArtifact) Reset() {
	*x = UploadArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mlflow_artifacts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadArtifact) ProtoMessage() {}

func (x *UploadArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_mlflow_artifacts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadArtifact.ProtoReflect.Descriptor instead.
func (*UploadArtifact) Descriptor() ([]byte, []int) {
	return file_mlflow_artifacts_proto_rawDescGZIP(), []int{1}
}

type ListArtifacts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter artifacts matching this path (a relative path from the root artifact directory).
	Path *string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (x *ListArtifacts) Reset() {
	*x = ListArtifacts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mlflow_artifacts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifacts) ProtoMessage() {}

func (x *ListArtifacts) ProtoReflect() protoreflect.Message {
	mi := &file_mlflow_artifacts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifacts.ProtoReflect.Descriptor instead.
func (*ListArtifacts) Descriptor() ([]byte, []int) {
	return file_mlflow_artifacts_proto_rawDescGZIP(), []int{2}
}

func (x *ListArtifacts) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path relative to the root artifact directory run.
	Path *string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// Whether the path is a directory.
	IsDir *bool `protobuf:"varint,2,opt,name=is_dir,json=isDir" json:"is_dir,omitempty"`
	// Size in bytes. Unset for directories.
	FileSize *int64 `protobuf:"varint,3,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mlflow_artifacts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mlflow_artifacts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_mlflow_artifacts_proto_rawDescGZIP(), []int{3}
}

func (x *FileInfo) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *FileInfo) GetIsDir() bool {
	if x != nil && x.IsDir != nil {
		return *x.IsDir
	}
	return false
}

func (x *FileInfo) GetFileSize() int64 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

type DownloadArtifact_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DownloadArtifact_Response) Reset() {
	*x = DownloadArtifact_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mlflow_artifacts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadArtifact_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadArtifact_Response) ProtoMessage() {}

func (x *DownloadArtifact_Response) ProtoReflect() protoreflect.Message {
	mi := &file_mlflow_artifacts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadArtifact_Response.ProtoReflect.Descriptor instead.
func (*DownloadArtifact_Response) Descriptor() ([]byte, []int) {
	return file_mlflow_artifacts_proto_rawDescGZIP(), []int{0, 0}
}

type UploadArtifact_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadArtifact_Response) Reset() {
	*x = UploadArtifact_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mlflow_artifacts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadArtifact_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadArtifact_Response) ProtoMessage() {}

func (x *UploadArtifact_Response) ProtoReflect() protoreflect.Message {
	mi := &file_mlflow_artifacts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadArtifact_Response.ProtoReflect.Descriptor instead.
func (*UploadArtifact_Response) Descriptor() ([]byte, []int) {
	return file_mlflow_artifacts_proto_rawDescGZIP(), []int{1, 0}
}

type ListArtifacts_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// File location and metadata for artifacts.
	Files []*FileInfo `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
}

func (x *ListArtifacts_Response) Reset() {
	*x = ListArtifacts_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mlflow_artifacts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifacts_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifacts_Response) ProtoMessage() {}

func (x *ListArtifacts_Response) ProtoReflect() protoreflect.Message {
	mi := &file_mlflow_artifacts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifacts_Response.ProtoReflect.Descriptor instead.
func (*ListArtifacts_Response) Descriptor() ([]byte, []int) {
	return file_mlflow_artifacts_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListArtifacts_Response) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

var File_mlflow_artifacts_proto protoreflect.FileDescriptor

var file_mlflow_artifacts_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x15, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x70, 0x62, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x61, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x3c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x32, 0xaf, 0x04, 0x0a, 0x16, 0x4d, 0x6c, 0x66,
	0x6c, 0x6f, 0x77, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0xbd, 0x01, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x6c, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x1a, 0x2b, 0x2e, 0x6d,
	0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0xf2, 0x86, 0x19, 0x54, 0x0a,
	0x3d, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x12, 0x30, 0x2f, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2d,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x3c, 0x70, 0x61, 0x74, 0x68, 0x3a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x3e, 0x1a, 0x04, 0x08, 0x02, 0x10, 0x00, 0x10, 0x01,
	0x2a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x12, 0xb5, 0x01, 0x0a, 0x0e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x6c, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x56, 0xf2, 0x86, 0x19, 0x52, 0x0a, 0x3d, 0x0a, 0x03, 0x50, 0x55, 0x54,
	0x12, 0x30, 0x2f, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x3c, 0x70,
	0x61, 0x74, 0x68, 0x3a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x3e, 0x1a, 0x04, 0x08, 0x02, 0x10, 0x00, 0x10, 0x01, 0x2a, 0x0f, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x20, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x9c, 0x01, 0x0a, 0x0d,
	0x6c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x2e,
	0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x28,
	0x2e, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0xf2, 0x86, 0x19, 0x3c, 0x0a, 0x28,
	0x0a, 0x03, 0x47, 0x45, 0x54, 0x12, 0x1b, 0x2f, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2d, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x1a, 0x04, 0x08, 0x02, 0x10, 0x00, 0x10, 0x01, 0x2a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x20, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x49, 0x0a, 0x14, 0x6f, 0x72,
	0x67, 0x2e, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6c, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6c, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x90, 0x01, 0x01,
	0xe2, 0x3f, 0x02, 0x10, 0x01,
}

var (
	file_mlflow_artifacts_proto_rawDescOnce sync.Once
	file_mlflow_artifacts_proto_rawDescData = file_mlflow_artifacts_proto_rawDesc
)

func file_mlflow_artifacts_proto_rawDescGZIP() []byte {
	file_mlflow_artifacts_proto_rawDescOnce.Do(func() {
		file_mlflow_artifacts_proto_rawDescData = protoimpl.X.CompressGZIP(file_mlflow_artifacts_proto_rawDescData)
	})
	return file_mlflow_artifacts_proto_rawDescData
}

var file_mlflow_artifacts_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_mlflow_artifacts_proto_goTypes = []interface{}{
	(*DownloadArtifact)(nil),          // 0: mlflow.artifacts.DownloadArtifact
	(*UploadArtifact)(nil),            // 1: mlflow.artifacts.UploadArtifact
	(*ListArtifacts)(nil),             // 2: mlflow.artifacts.ListArtifacts
	(*FileInfo)(nil),                  // 3: mlflow.artifacts.FileInfo
	(*DownloadArtifact_Response)(nil), // 4: mlflow.artifacts.DownloadArtifact.Response
	(*UploadArtifact_Response)(nil),   // 5: mlflow.artifacts.UploadArtifact.Response
	(*ListArtifacts_Response)(nil),    // 6: mlflow.artifacts.ListArtifacts.Response
}
var file_mlflow_artifacts_proto_depIdxs = []int32{
	3, // 0: mlflow.artifacts.ListArtifacts.Response.files:type_name -> mlflow.artifacts.FileInfo
	0, // 1: mlflow.artifacts.MlflowArtifactsService.downloadArtifact:input_type -> mlflow.artifacts.DownloadArtifact
	1, // 2: mlflow.artifacts.MlflowArtifactsService.uploadArtifact:input_type -> mlflow.artifacts.UploadArtifact
	2, // 3: mlflow.artifacts.MlflowArtifactsService.listArtifacts:input_type -> mlflow.artifacts.ListArtifacts
	4, // 4: mlflow.artifacts.MlflowArtifactsService.downloadArtifact:output_type -> mlflow.artifacts.DownloadArtifact.Response
	5, // 5: mlflow.artifacts.MlflowArtifactsService.uploadArtifact:output_type -> mlflow.artifacts.UploadArtifact.Response
	6, // 6: mlflow.artifacts.MlflowArtifactsService.listArtifacts:output_type -> mlflow.artifacts.ListArtifacts.Response
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mlflow_artifacts_proto_init() }
func file_mlflow_artifacts_proto_init() {
	if File_mlflow_artifacts_proto != nil {
		return
	}
	file_scalapb_scalapb_proto_init()
	file_databricks_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mlflow_artifacts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mlflow_artifacts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mlflow_artifacts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifacts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mlflow_artifacts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mlflow_artifacts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadArtifact_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mlflow_artifacts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadArtifact_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mlflow_artifacts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifacts_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mlflow_artifacts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mlflow_artifacts_proto_goTypes,
		DependencyIndexes: file_mlflow_artifacts_proto_depIdxs,
		MessageInfos:      file_mlflow_artifacts_proto_msgTypes,
	}.Build()
	File_mlflow_artifacts_proto = out.File
	file_mlflow_artifacts_proto_rawDesc = nil
	file_mlflow_artifacts_proto_goTypes = nil
	file_mlflow_artifacts_proto_depIdxs = nil
}
