#!/bin/bash
set -ex

pwd

FIND_GENERATED_COMMAND=${1:-"find . -path '**/__generated__/*.ts' -print0"}
FIND_GENERATED_TEST_COMMAND=$(echo "$FIND_GENERATED_COMMAND" | sed s@__generated__@__generated_test__@)
CODEGEN_COMMAND=${2:-"yarn apollo-codegen:base"}

# Copying the files to __generated_test__
eval $FIND_GENERATED_COMMAND | while read -d $'\0' file
do
  TEST_FILE_NAME=$(echo $file | sed s@__generated__@__generated_test__@)
  mkdir -p $(dirname $TEST_FILE_NAME)
  mv $file $TEST_FILE_NAME
done

# Execute codegen script
output=$($CODEGEN_COMMAND 2>&1)
echo "$output"

if echo "$output" | grep -i 'fail'; then
    echo "Found keyword 'fail' in command output, exiting..."
    exit 1
fi

# Check that all new files match existing files
eval $FIND_GENERATED_COMMAND | while read -d $'\0' file
do
  TEST_FILE_NAME=$(echo $file | sed s@__generated__@__generated_test__@)
  diff $file $TEST_FILE_NAME

  diff_result=$?

  if [[ diff_result -ne 0 ]]; then
    exit 1
  fi
done

# Check that all existing files match new files
# This helps prevent cases where existing files should be deleted
eval $FIND_GENERATED_TEST_COMMAND | while read -d $'\0' file
do
  TEST_FILE_NAME=$(echo $file | sed s@__generated_test__@__generated__@)
  diff $file $TEST_FILE_NAME

  diff_result=$?

  if [[ diff_result -ne 0 ]]; then
    if [[ ! -f "$TEST_FILE_NAME" ]]; then
      echo "### The file $file included in your PR in __generated__ was not generated by graphql codegen. Manually added files are not allowed in __generated__. Please remove your file and try again ###"
    fi
    exit 1
  fi
done

check_result=$?

if [[ check_result -ne 0 ]];
then
  exit 1
else
  # Remove all additional generated files if tests pass
  find . -path '**/__generated_test__/*.ts' | xargs rm
fi
