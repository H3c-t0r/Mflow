from mlflow.entities import Metric
import mlflow
import time
import os

if __name__ == "__main__":
    os.environ[
        "MLFLOW_TRACKING_TOKEN"
    ] = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9.eyJhdWQiOiJodHRwczovL21hbmFnZW1lbnQuY29yZS53aW5kb3dzLm5ldC8iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNjk0ODMzODM1LCJuYmYiOjE2OTQ4MzM4MzUsImV4cCI6MTY5NDgzODY1NywiX2NsYWltX25hbWVzIjp7Imdyb3VwcyI6InNyYzEifSwiX2NsYWltX3NvdXJjZXMiOnsic3JjMSI6eyJlbmRwb2ludCI6Imh0dHBzOi8vZ3JhcGgud2luZG93cy5uZXQvNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3L3VzZXJzL2JmZjM1NWY4LTFiMmYtNDExOC1hODI5LWJlMzJiNDFhMTk5Zi9nZXRNZW1iZXJPYmplY3RzIn19LCJhY3IiOiIxIiwiYWlvIjoiQVlRQWUvOFVBQUFBZ0lZYjhGVk9zK3lNYnpvU08yMzVxT2NjL3ljNEp6Y2hKaGxMdkE0dGpsa3A2TlFDNlZVdUZ3dUJNZ1gyOHhwZC9TM3FleXR5c0VJVlBwYVhZa3dRRUowZENtQmRGbUZnanR0WWk5WDBnUWdDVzdiT1NadGJuUUowV0pzZnpBNGZuNUpZY1piRkd1NzA4MEh1RHBXK2lmQmFicUVkbndUNmh4OUFxTHAyMS9vPSIsImFtciI6WyJyc2EiLCJtZmEiXSwiYXBwaWQiOiIwNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDYiLCJhcHBpZGFjciI6IjAiLCJkZXZpY2VpZCI6ImJmMzUyZDFhLWRkMDAtNDVkNC1hZTNkLWJkZTRlZTAxNjUyNCIsImZhbWlseV9uYW1lIjoiU3VtYW50IiwiZ2l2ZW5fbmFtZSI6IlNhZ2FyIiwiaXBhZGRyIjoiNTAuNDcuMjM4LjI0NiIsIm5hbWUiOiJTYWdhciBTdW1hbnQiLCJvaWQiOiJiZmYzNTVmOC0xYjJmLTQxMTgtYTgyOS1iZTMyYjQxYTE5OWYiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMjEyNzUyMTE4NC0xNjA0MDEyOTIwLTE4ODc5Mjc1MjctODEzMjg2NCIsInB1aWQiOiIxMDAzN0ZGRTgwREVCMTZGIiwicmgiOiIwLkFSb0F2NGo1Y3ZHR3IwR1JxeTE4MEJIYlIwWklmM2tBdXRkUHVrUGF3ZmoyTUJNYUFNNC4iLCJzY3AiOiJ1c2VyX2ltcGVyc29uYXRpb24iLCJzdWIiOiJFaG1fbG9faUhjUkRhdlVQOHlKTWN4ZURNLVVJbDU5T3pISVJ0SHJkM2RJIiwidGlkIjoiNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3IiwidW5pcXVlX25hbWUiOiJzYXN1bUBtaWNyb3NvZnQuY29tIiwidXBuIjoic2FzdW1AbWljcm9zb2Z0LmNvbSIsInV0aSI6Ik1KTko3czlZRFVLOXNwemJudTJHQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfY2MiOlsiQ1AxIl0sInhtc190Y2R0IjoxMjg5MjQxNTQ3fQ.I-FwNBOS8YqzyvrXcmFQO12aae7_qDNHAVjy5vcv9TZM9JE7MEgPXtxNbpQp2z_bmr8HnEJhNm-3vq9U5Y6kwVlf03-SwTAEGD77hjaO2ASulwZYcFqzQXzBCkHAiCpNAkkmFceBbSnJgww1JefceqCE8-jwPq7gnlIZQxdP5y1zx7r85GCJ4OO8Iu_N_uDlDOW6w2AIHCnTtAwPNtf4j5UCeuDUdgsrQBO20TPlji6E-hV79jcHlUftWmR2zFkN_2ftckZF9crKC8IFrPtrBm_6WMAXesYL2KvwACjbknZCaMvUt6GH5KoGJeimwQbF0veQq36mGf71D9zWu8yf_Q"
    mlflow.set_tracking_uri(
        "http://localhost:56171/mlflow/v2.0/subscriptions/381b38e9-9840-4719-a5a0-61d9585e1e91/resourceGroups/sasum_centraluseuap_rg/providers/Microsoft.MachineLearningServices/workspaces/sasum-int-ws-2"
    )
    experiment_name = "my-mlflow-experiment-running-locally"
    mlflow.set_experiment(experiment_name)
    list_to_log = [1, 2, 3, 2, 1, 2, 3, 2, 1]
    metrics = [Metric(key="sample_list", value=val, timestamp=int(time.time() * 1000), step=0) for val in list_to_log]
    with mlflow.start_run() as run:
        mlflow.log_metric("sasum-metric-3", time.time(), synchronous=False)
        mlflow.log_metrics({"a": 1, "b": 2}, synchronous=False)
    print("hello")
