name: MLflow tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  r-tests:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        config:
          - {os: ubuntu-16.04, r: 'release'}
    steps:
    - uses: actions/checkout@master
    - uses: r-lib/actions/setup-r@v1
      with:
        r-version: '4.0.0' # The R version to download (if necessary) and use.
    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps('mlflow/R/mlflow', dependencies = TRUE), ".github/depends.Rds", version = 2)
      shell: Rscript {0}
    - name: Cache R packages
      if: runner.os != 'Windows'
      uses: actions/cache@v1
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

    - name: Install system dependencies
      run: |
        sudo apt-get install -y libcurl4-openssl-dev
    - name: Install dependencies
      run: |
        install.packages("devtools")
        remotes::install_deps('mlflow/R/mlflow', dependencies = TRUE, upgrade = FALSE)
      shell: Rscript {0}
    - name: Run tests
      run: |
        source ./travis/install-common-deps.sh
        export PATH="$HOME/miniconda/bin:$PATH"
        source activate test-environment
        cd mlflow/R/mlflow
        # Building the package here populates the /home/travis/R/Library cache,
        # and is also used when python forks into R (e.g., rfunc via models CLI).
        R CMD build .
        export LINTR_COMMENT_BOT=false
        cd tests
        Rscript ../.travis.R
    - name: Calculate code coverage
      run: |
        export COVR_RUNNING=true
        Rscript -e 'covr::codecov()'
